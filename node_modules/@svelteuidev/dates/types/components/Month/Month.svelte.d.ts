import { SvelteComponentTyped } from "svelte";
import type { MonthProps as $$MonthProps } from './Month.styles';
declare const __propDef: {
    props: {
        [x: string]: any;
        use?: any;
        element?: any;
        class?: any;
        override?: any;
        disableOutsideEvents?: $$MonthProps['disableOutsideEvents'];
        month: $$MonthProps['month'];
        locale?: $$MonthProps['locale'];
        value?: $$MonthProps['value'];
        range?: $$MonthProps['range'];
        weekdayLabelFormat?: $$MonthProps['weekdayLabelFormat'];
        minDate?: $$MonthProps['minDate'];
        maxDate?: $$MonthProps['maxDate'];
        hideWeekdays?: $$MonthProps['hideWeekdays'];
        size?: SvelteUISize;
        fullWidth?: $$MonthProps['fullWidth'];
        preventFocus?: $$MonthProps['preventFocus'];
        focusable?: $$MonthProps['focusable'];
        firstDayOfWeek?: $$MonthProps['firstDayOfWeek'];
        hideOutsideDates?: $$MonthProps['hideOutsideDates'];
        onChange?: $$MonthProps['onChange'];
        onDayMouseEnter?: $$MonthProps['onDayMouseEnter'];
        onDayKeyDown?: $$MonthProps['onDayKeyDown'];
        renderDay?: $$MonthProps['renderDay'];
        dayClassName?: $$MonthProps['dayClassName'];
        excludeDate?: $$MonthProps['excludeDate'];
        isDateInRange?: $$MonthProps['isDateInRange'];
        isDateFirstInRange?: $$MonthProps['isDateFirstInRange'];
        isDateLastInRange?: $$MonthProps['isDateLastInRange'];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export declare type MonthProps = typeof __propDef.props;
export declare type MonthEvents = typeof __propDef.events;
export declare type MonthSlots = typeof __propDef.slots;
export default class Month extends SvelteComponentTyped<MonthProps, MonthEvents, MonthSlots> {
}
export {};
