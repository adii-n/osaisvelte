import { SvelteComponentTyped } from "svelte";
import type { DayProps as $$DayProps } from './Day.styles';
declare const __propDef: {
    props: {
        use?: any;
        element?: any;
        class?: any;
        override?: any;
        value?: $$DayProps['value'];
        selected?: $$DayProps['selected'];
        weekend?: $$DayProps['weekend'];
        outside?: $$DayProps['outside'];
        disabled?: $$DayProps['disabled'];
        hasValue?: $$DayProps['hasValue'];
        inRange?: $$DayProps['inRange'];
        firstInRange?: $$DayProps['firstInRange'];
        lastInRange?: $$DayProps['lastInRange'];
        size?: SvelteUISize;
        fullWidth?: $$DayProps['fullWidth'];
        firstInMonth?: $$DayProps['firstInMonth'];
        focusable?: $$DayProps['focusable'];
        hideOutsideDates?: $$DayProps['hideOutsideDates'];
        primaryColor?: SvelteUIColor;
        onMouseEnter?: $$DayProps['onMouseEnter'];
        renderDay?: $$DayProps['renderDay'];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export declare type DayProps = typeof __propDef.props;
export declare type DayEvents = typeof __propDef.events;
export declare type DaySlots = typeof __propDef.slots;
export default class Day extends SvelteComponentTyped<DayProps, DayEvents, DaySlots> {
}
export {};
